//	This proc is used to create new matinee cameras//	The tool allows the user to take a section of time from a camera from matinee //	and create a new camera using that animation at a specified time.//	To use://	1. Select source camera//	2. Setup options in the window:	//		-New Camera Name//		-Copy Frame Range = which frames to copy from the original selected camera//		-NewRange = new frame to paste copied animation on the new camera		//	3. Hit "Go!"global proc CineCamProc (){		//proc for cam creation		//	User specified new camera name	$name = `textField -query -text je_name`;	//	User specified start time for the new camera	int $start = `intField -query -value je_start`;	//	User specified end time for the new camera	int $end = `intField -query -value je_end`;	//	Time at which new camera animation should be pasted (new start time)	int $time = `intField -query -value je_time`;			// Create a string to use when setting the timerange when copying/pasting	string $timeRange = $start + ":" + $end; 			//	Get list of selected objects	string $SelCam[] = ` selectedNodes `;		//	Check size of selection.	int $SelCamSize = ` size($SelCam) `;		//	Error if there is more than one selected object.	if ( $SelCamSize > 1 ) 	{		Error ( "Please select only one camera object." );	}		//	Get original camera name isolated in a variable	string $origCam = $SelCam[ 0 ];		//	List relatives of the original camera	string $origCamChildList[] = ` listRelatives -children $origCam `;		//	Get the size of that list	int $origCamChildSize = ` size($origCamChildList) `;		//	Error if there is more than one child.	if ( $origCamChildSize > 1 ) 	{		Error ( "Selected object has more children than allowed. Please check to see that the appropriate object type is selected." );	}		//	Child (camera) object variable	string $origCamChild = $origCamChildList[ 0 ];		//	Copy specified keyframes from the original camera 	copyKey -time $timeRange $origCam;		//	Duplicate original (selected) camera	string $newCamParentList[] = ` duplicate  -name $name $origCam `;		//	Isolate camera to a string variable	$newCamParent = $newCamParentList[ 0 ];	//	Get a list of the new camera's children			string $newChildShape[] = ` listRelatives $newCamParent `;	//	Isolate child to a string varible	string $newChildObj = $newChildShape[ 0 ];		//	Create the actual full name of the child object	string $newChildObj = $newCamParent + "|" + $newChildShape[ 0 ];	//	Create a new name for the camera child	string $childRename = $newCamParent + "_pivot";	//	Perform the rename	rename $newChildObj $childRename;		//	Set current time to time specified	currentTime $time;	//	Paste keys for the new camera parent	pasteKey -t $time $newCamParent;		//	Copy keys from the original child object	copyKey -time $timeRange $origCamChild;	//	Set current time to time specified	currentTime $time;	//	Paste keys for the new camera child	pasteKey -t $time $childRename;}////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////Variables		global proc CineCamHelper (){			// Save the name of the window in a variable	// called $win;	//	$win = "CineCamHelper";	// Check and see if the window exists.	// if it does, delete it.	//	if (`window -exists $win`)	deleteUI $win;	// Create the window	//	window $win;				// our interface is getting big, so we'll add a scrollLayout	//	$scrollLayout = `scrollLayout`;		// create the main columnLayout.	//	$mainColLayout = `columnLayout -adj true -co "both" 10`;		//////////////////////////////////////////////////////////////////////////	/////////////////////////////////////////////////////////////////////////	//NewcamTab	// now we can create the frameLayout	frameLayout	-label "Options"	-labelAlign "center"	-collapsable false	SelFrameLayout;	// And we’ll create an adjustable columnLayout		columnLayout -adj true selectionColumnLayout;		//Create The buttons			rowColumnLayout -nc 3 -cw 1 100 -cw 2 100 CamNameColumn;		text "New Camera Name: ";		textField je_name;				      	setParent..;	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////FK IK tab	//FrameRangeTab	// now we can create the frameLayout	frameLayout	-label "Copy Frame Range"	-labelAlign "center"	-collapsable false	SelFrameLayout;	// And we’ll create an adjustable columnLayout 	//	columnLayout -adj true selectionColumnLayout;		//Create The buttons						rowColumnLayout -nc 4 -cw 1 100 -cw 2 100 CamNameColumn;		text "Start Frame: ";			intField je_start;		text "End Frame:";		intField je_end;							      	setParent..;	//////////////////////////////////////////////////////////////////////////////////////	//////////////////////////////////////////////////////////////////////////////////////	//NewRangeTab	// now we can create the frameLayout	frameLayout	-label "NewRange"	-labelAlign "center"	-collapsable false	SelFrameLayout;	// And we’ll create an adjustable columnLayout		columnLayout -adj true selectionColumnLayout;		//Create The buttons		rowColumnLayout -nc 5 -cw 1 100 -cw 2 100 CamNameColumn;		text "New Start Frame: ";		intField je_time;			button -c "CineCamProc;" -label "Go!";	      	setParent..;			// Show the Window	showWindow $win;}