/*===========================================================================
    C++ class definitions exported from UnrealScript.
    This is automatically generated by the tools.
    DO NOT modify this manually! Edit the corresponding .uc files instead!
    Copyright 1998-2011 Epic Games, Inc. All Rights Reserved.
===========================================================================*/
#if SUPPORTS_PRAGMA_PACK
#pragma pack (push,4)
#endif

#include "GFxUINames.h"

// Split enums from the rest of the header so they can be included earlier
// than the rest of the header file by including this file twice with different
// #define wrappers. See Engine.h and look at EngineClasses.h for an example.
#if !NO_ENUMS && !defined(NAMES_ONLY)

#ifndef INCLUDED_GFXUI_UIPRIVATE_ENUMS
#define INCLUDED_GFXUI_UIPRIVATE_ENUMS 1


#endif // !INCLUDED_GFXUI_UIPRIVATE_ENUMS
#endif // !NO_ENUMS

#if !ENUMS_ONLY

#ifndef NAMES_ONLY
#define AUTOGENERATE_FUNCTION(cls,idx,name)
#endif


#ifndef NAMES_ONLY

#ifndef INCLUDED_GFXUI_UIPRIVATE_CLASSES
#define INCLUDED_GFXUI_UIPRIVATE_CLASSES 1
#define ENABLE_DECLARECLASS_MACRO 1
#include "UnObjBas.h"
#undef ENABLE_DECLARECLASS_MACRO

class UGFxDataStoreSubscriber : public UObject, public IUIDataStorePublisher
{
public:
    //## BEGIN PROPS GFxDataStoreSubscriber
    class UGFxMoviePlayer* Movie;
    //## END PROPS GFxDataStoreSubscriber

    virtual void PublishValues();
    virtual void SetDataStoreBinding(const FString& MarkupText,INT BindingIndex=-1);
    virtual FString GetDataStoreBinding(INT BindingIndex=-1) const;
    virtual UBOOL RefreshSubscriberValue(INT BindingIndex=-1);
    virtual void NotifyDataStoreValueUpdated(class UUIDataStore* SourceDataStore,UBOOL bValuesInvalidated,FName PropertyTag,class UUIDataProvider* SourceProvider,INT ArrayIndex);
    virtual void GetBoundDataStores(TArray<class UUIDataStore*>& out_BoundDataStores);
    void ClearBoundDataStores();
    virtual UBOOL SaveSubscriberValue(TArray<class UUIDataStore*>& out_BoundDataStores,INT BindingIndex=-1);
    DECLARE_FUNCTION(execPublishValues)
    {
        P_FINISH;
        this->PublishValues();
    }
    DECLARE_FUNCTION(execSetDataStoreBinding)
    {
        P_GET_STR(MarkupText);
        P_GET_INT_OPTX(BindingIndex,-1);
        P_FINISH;
        this->SetDataStoreBinding(MarkupText,BindingIndex);
    }
    DECLARE_FUNCTION(execGetDataStoreBinding)
    {
        P_GET_INT_OPTX(BindingIndex,-1);
        P_FINISH;
        *(FString*)Result=this->GetDataStoreBinding(BindingIndex);
    }
    DECLARE_FUNCTION(execRefreshSubscriberValue)
    {
        P_GET_INT_OPTX(BindingIndex,-1);
        P_FINISH;
        *(UBOOL*)Result=this->RefreshSubscriberValue(BindingIndex);
    }
    DECLARE_FUNCTION(execNotifyDataStoreValueUpdated)
    {
        P_GET_OBJECT(UUIDataStore,SourceDataStore);
        P_GET_UBOOL(bValuesInvalidated);
        P_GET_NAME(PropertyTag);
        P_GET_OBJECT(UUIDataProvider,SourceProvider);
        P_GET_INT(ArrayIndex);
        P_FINISH;
        this->NotifyDataStoreValueUpdated(SourceDataStore,bValuesInvalidated,PropertyTag,SourceProvider,ArrayIndex);
    }
    DECLARE_FUNCTION(execGetBoundDataStores)
    {
        P_GET_TARRAY_REF(class UUIDataStore*,out_BoundDataStores);
        P_FINISH;
        this->GetBoundDataStores(out_BoundDataStores);
    }
    DECLARE_FUNCTION(execClearBoundDataStores)
    {
        P_FINISH;
        this->ClearBoundDataStores();
    }
    DECLARE_FUNCTION(execSaveSubscriberValue)
    {
        P_GET_TARRAY_REF(class UUIDataStore*,out_BoundDataStores);
        P_GET_INT_OPTX(BindingIndex,-1);
        P_FINISH;
        *(UBOOL*)Result=this->SaveSubscriberValue(out_BoundDataStores,BindingIndex);
    }
    DECLARE_CLASS(UGFxDataStoreSubscriber,UObject,0,GFxUI)
    virtual UObject* GetUObjectInterfaceUIDataStorePublisher(){return this;}
    virtual UObject* GetUObjectInterfaceUIDataStoreSubscriber(){return this;}
    NO_DEFAULT_CONSTRUCTOR(UGFxDataStoreSubscriber)
};

#undef DECLARE_CLASS
#undef DECLARE_CASTED_CLASS
#undef DECLARE_ABSTRACT_CLASS
#undef DECLARE_ABSTRACT_CASTED_CLASS
#endif // !INCLUDED_GFXUI_UIPRIVATE_CLASSES
#endif // !NAMES_ONLY

AUTOGENERATE_FUNCTION(UGFxDataStoreSubscriber,-1,execSaveSubscriberValue);
AUTOGENERATE_FUNCTION(UGFxDataStoreSubscriber,-1,execClearBoundDataStores);
AUTOGENERATE_FUNCTION(UGFxDataStoreSubscriber,-1,execGetBoundDataStores);
AUTOGENERATE_FUNCTION(UGFxDataStoreSubscriber,-1,execNotifyDataStoreValueUpdated);
AUTOGENERATE_FUNCTION(UGFxDataStoreSubscriber,-1,execRefreshSubscriberValue);
AUTOGENERATE_FUNCTION(UGFxDataStoreSubscriber,-1,execGetDataStoreBinding);
AUTOGENERATE_FUNCTION(UGFxDataStoreSubscriber,-1,execSetDataStoreBinding);
AUTOGENERATE_FUNCTION(UGFxDataStoreSubscriber,-1,execPublishValues);

#ifndef NAMES_ONLY
#undef AUTOGENERATE_FUNCTION
#endif

#ifdef STATIC_LINKING_MOJO
#ifndef GFXUI_UIPRIVATE_NATIVE_DEFS
#define GFXUI_UIPRIVATE_NATIVE_DEFS

#define AUTO_INITIALIZE_REGISTRANTS_GFXUI_UIPRIVATE \
	UGFxDataStoreSubscriber::StaticClass(); \
	GNativeLookupFuncs.Set(FName("GFxDataStoreSubscriber"), GGFxUIUGFxDataStoreSubscriberNatives); \

#endif // GFXUI_UIPRIVATE_NATIVE_DEFS

#ifdef NATIVES_ONLY
FNativeFunctionLookup GGFxUIUGFxDataStoreSubscriberNatives[] = 
{ 
	MAP_NATIVE(UGFxDataStoreSubscriber, execSaveSubscriberValue)
	MAP_NATIVE(UGFxDataStoreSubscriber, execClearBoundDataStores)
	MAP_NATIVE(UGFxDataStoreSubscriber, execGetBoundDataStores)
	MAP_NATIVE(UGFxDataStoreSubscriber, execNotifyDataStoreValueUpdated)
	MAP_NATIVE(UGFxDataStoreSubscriber, execRefreshSubscriberValue)
	MAP_NATIVE(UGFxDataStoreSubscriber, execGetDataStoreBinding)
	MAP_NATIVE(UGFxDataStoreSubscriber, execSetDataStoreBinding)
	MAP_NATIVE(UGFxDataStoreSubscriber, execPublishValues)
	{NULL, NULL}
};

#endif // NATIVES_ONLY
#endif // STATIC_LINKING_MOJO

#ifdef VERIFY_CLASS_SIZES
VERIFY_CLASS_OFFSET_NODIE(UGFxDataStoreSubscriber,GFxDataStoreSubscriber,Movie)
VERIFY_CLASS_SIZE_NODIE(UGFxDataStoreSubscriber)
#endif // VERIFY_CLASS_SIZES
#endif // !ENUMS_ONLY

#if SUPPORTS_PRAGMA_PACK
#pragma pack (pop)
#endif
